# Copyright 2022 NXP
#
# NXP Confidential. This software is owned or controlled by NXP and may only
# be used strictly in accordance with the applicable license terms.  By
# expressly accepting such terms or by downloading, installing, activating
# and/or otherwise using the software, you are agreeing that you have read,
# and that you agree to comply with and are bound by, such license terms.  If
# you do not agree to be bound by the applicable license terms, then you may
# not retain, install, activate or otherwise use the software.
#

import Mctt_Core as pnp

SESSION_ID = [0x44, 0x33, 0x22, 0x11]

tst_256_Command_Reset = [0x20, 0x00, 0x00, 0x01, 0x00]

tst_256_Command_Session_Get_State = [0x21, 0x06, 0x00, 0x04] + SESSION_ID

tst_256_Command_Session_Init = [0x21, 0x00, 0x00, 0x05] + SESSION_ID + [0xD0]

tst_256_Command_Set_App_Config = [
    0x21, 0x03, 0x00, 0x3A] + SESSION_ID + [  0x10, 0x04, 0x01, 0x09,
    0x14, 0x01, 0x19, 0x16, 0x01, 0x00, 0x15, 0x01, 0x02, 0x17, 0x01, 0x01,
    0x0B, 0x01, 0x00, 0x1F, 0x01, 0x01, 0x12, 0x01, 0x00, 0x29, 0x01, 0x00,
    0x0D, 0x01, 0x00, 0x02, 0x01, 0x00, 0x06, 0x02, 0x00, 0x8C, 0x07, 0x02,
    0x00, 0x8D, 0x0A, 0x04, 0x00, 0x00, 0x00, 0x00, 0x05, 0x01, 0x01, 0x1C,
    0x01, 0x00]

tst_256_Command_Test_Config_Set = [
    0x2D, 0x00, 0x00, 0x32] + SESSION_ID + [  0x09, 0x00, 0x04, 0xE8,
    0x03, 0x00, 0x00, 0x01, 0x04, 0xD0, 0x07, 0x00, 0x00, 0x02, 0x04, 0xC2,
    0x01, 0x00, 0x00, 0x03, 0x04, 0xEE, 0x02, 0x00, 0x00, 0x04, 0x01, 0x00,
    0x05, 0x01, 0x00, 0x07, 0x04, 0x00, 0x00, 0x00, 0x00, 0x06, 0x04, 0x00,
    0x00, 0x00, 0x00, 0x08, 0x01, 0x00
]
tst_256_Command_Periodic_Tx1 = [
    0x3D, 0x02, 0x00, 0xFF, 0x06, 0x5E, 0xA1, 0x21, 0x36, 0xED, 0xD5, 0x27,
    0x80, 0x33, 0xD4, 0xF7, 0xE8, 0xB6, 0x5B, 0x6C, 0xAB, 0x4C, 0x3C, 0x20,
    0xC7, 0x8C, 0x02, 0x84, 0xBD, 0x82, 0xD4, 0x30, 0x96, 0xA7, 0x9C, 0x77,
    0x24, 0x0F, 0x68, 0x3F, 0x8A, 0xE5, 0x10, 0x0F, 0xFF, 0x15, 0x19, 0x6A,
    0xCE, 0x48, 0xD9, 0x5C, 0xA1, 0x15, 0xDC, 0x52, 0x00, 0x75, 0x87, 0x2F,
    0x15, 0x78, 0xFB, 0x9B, 0xB2, 0x37, 0x3C, 0x9E, 0x95, 0x0A, 0x93, 0x6F,
    0xEA, 0xFB, 0x30, 0x86, 0x11, 0x7A, 0x14, 0xF8, 0xA2, 0x52, 0x2E, 0x04,
    0xAE, 0xDB, 0xC4, 0xE9, 0x48, 0x71, 0x15, 0xFB, 0x44, 0x26, 0x3D, 0xF6,
    0x3F, 0xB4, 0x58, 0x92, 0xE0, 0xB6, 0xEA, 0x58, 0x5C, 0x17, 0x7F, 0xB3,
    0x40, 0xCA, 0x8E, 0x4A, 0x6B, 0xBB, 0xA3, 0x8D, 0x59, 0x06, 0xBD, 0x8E,
    0xA8, 0x68, 0xF5, 0x13, 0xD4, 0xF2, 0x61, 0xE9, 0x46, 0x05, 0x38, 0x7B,
    0x8D, 0x7A, 0x37, 0xA3, 0xEB, 0x21, 0x43, 0xBF, 0x13, 0x6D, 0x4F, 0x08,
    0x31, 0x6D, 0x80, 0x1F, 0x2B, 0xFE, 0x8F, 0xE9, 0x26, 0x40, 0x70, 0x9D,
    0x4D, 0x46, 0x31, 0x1B, 0xCD, 0x12, 0x24, 0x80, 0x24, 0xC0, 0x40, 0xF7,
    0x9C, 0x01, 0xC5, 0xD2, 0x12, 0xCB, 0x1F, 0xD9, 0xFC, 0x4F, 0x0D, 0xE1,
    0xAB, 0x2C, 0x02, 0xA1, 0xCD, 0xE2, 0xCC, 0xC2, 0x35, 0x89, 0x73, 0x35,
    0xDF, 0xC3, 0x64, 0xC9, 0x2E, 0xEF, 0xCE, 0xFD, 0x79, 0x9F, 0x4D, 0x12,
    0xC6, 0x4C, 0xC6, 0x65, 0xD5, 0x49, 0x92, 0xFC, 0x61, 0xF6, 0xDE, 0x5F,
    0xA2, 0x36, 0x51, 0xA9, 0x16, 0x23, 0xF0, 0xDE, 0x81, 0x00, 0x3F, 0x7F,
    0x33, 0x6E, 0xA9, 0x5C, 0x89, 0xE3, 0x22, 0xAA, 0xB6, 0x59, 0x0B, 0x55,
    0xC3, 0x43, 0x56, 0x98, 0xD5, 0xC5, 0xEA, 0xCA, 0xAF, 0x24, 0x49, 0x7B,
    0x77, 0x7C, 0x70, 0xBF, 0xBD, 0xB1, 0xB4
]
tst_256_Command_Periodic_Tx2 = [0x2D, 0x02, 0x00, 0x01, 0xC1]

mctt_test_256_cmd_list = [
    tst_256_Command_Reset,
    tst_256_Command_Session_Get_State,
    tst_256_Command_Session_Init,
    tst_256_Command_Set_App_Config,
    tst_256_Command_Test_Config_Set,
    tst_256_Command_Periodic_Tx1,
    tst_256_Command_Periodic_Tx2,
    ]


def main():

    pnp.run(mctt_test_256_cmd_list, SESSION_ID)


if __name__ == '__main__':
    main()
